set dotenv-load

build: generate
    go build -o ./bin/oxidrive ./cmd/oxidrive/

run *args: generate
    go run ./cmd/oxidrive {{ args }}

test path="./..." short="false": generate
    gotestdox {{ path }} -short={{ short }}

test-mutations: generate
    cd .. && gremlins run ./server/internal --test-cpu=4 --workers=4

test-unit path="./...":
    @just test {{ path }} true

watch:
    air

generate: openapi
    go generate ./...

openapi: _install
    rm -f -- openapi/out.yml
    npx redocly join -o openapi/out.yml openapi/openapi.yaml ./openapi/*.yaml

fmt:
    goimports -local github.com/oxidrive/oxidrive -w .
    go fmt ./...
    golangci-lint run --fix

lint: generate
    go vet ./...
    golangci-lint run

psql:
    @PGPASSWORD=${POSTGRES_PASSWORD:-oxidrive} psql -h ${POSTGRES_HOST:-localhost} -p ${POSTGRES_PORT:-5432} -U ${POSTGRES_USER:-oxidrive} ${POSTGRES_DB:-oxidrive}

migration-create name:
    @for db in "postgres" "sqlite"; do \
      migrate create -dir "./migrations/$db" -ext sql {{ name }}; \
    done

setup: _install
    cp .env.example .env

_install:
    [ -d ../node_modules ] || npm ci
