openapi: "3.0.0"
info:
  title: Oxidrive Files API
  version: 1.0.0

paths:
  /api/files:
    get:
      operationId: filesList
      summary: List all available files
      tags: [files]
      security:
        - session: []
      parameters:
        - $ref: './openapi.yaml#/components/parameters/First'
        - $ref: './openapi.yaml#/components/parameters/After'
        - $ref: '#/components/parameters/FilePrefix'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        default:
          $ref: './openapi.yaml#/components/responses/InternalError'

    post:
      operationId: filesUpload
      summary: Upload a file to Oxidrive
      tags: [files]
      security:
        - session: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUpload'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          $ref: './openapi.yaml#/components/responses/Error'
        default:
          $ref: './openapi.yaml#/components/responses/InternalError'

  /api/files/{id}:
    patch:
      operationId: filePatch
      summary: Change a file's metadata
      tags: [files]
      security:
        - session: []
      parameters:
        - $ref: '#/components/parameters/FileID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePatch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: One or more request param is invalid
          $ref: '#/components/responses/InvalidParams'
        '404':
          description: The requested file does not exist or cannot be accessed
          $ref: './openapi.yaml#/components/responses/NotFound'
        default:
          $ref: './openapi.yaml#/components/responses/InternalError'


    delete:
      operationId: fileDelete
      summary: Delete a file
      tags: [files]
      security:
        - session: []
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '404':
          description: The requested file does not exist or cannot be accessed
          $ref: './openapi.yaml#/components/responses/NotFound'
        default:
          $ref: './openapi.yaml#/components/responses/InternalError'

components:
  parameters:
    FileID:
      in: path
      name: id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of the requested file

    FilePrefix:
      name: prefix
      in: query
      required: false
      description: |
        Prefix to filter files for. This is matched against the directory the files resides in, not as a generic prefix.
        E.g. a prefix `hello` will match `hello/world.txt` but not `hello/dear/world.txt`.
      schema:
        type: string
        format: path

  responses:
    InvalidParams:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidFileParamsError'

  schemas:
    File:
      type: object
      required:
        - id
        - type
        - contentType
        - path
        - name
        - size
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [file, folder]
        contentType:
          type: string
          example: "image/png"
        path:
          type: string
          format: path
          example: "path/to/file.txt"
        name:
          type: string
          example: file.txt
        size:
          type: integer
          description: Size of the file in bytes
          minimum: 0
          example: 42

    FileList:
      allOf:
        - $ref: './openapi.yaml#/components/schemas/ListInfo'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/File'

    FileUpload:
      type: object
      required:
        - path
        - file
      properties:
        path:
          type: string
        file:
          type: string
          format: binary

    FileUploadResponse:
      type: object
      required:
        - ok
        - id
      properties:
        ok:
          type: boolean
        id:
          type: string

    FilePatch:
      type: object
      properties:
        path:
          type: string
          format: path
          description: |
            New path of the file.
            To simply rename it, set to the current path with the last segment changed.
            E.g.: path/to/file.txt -> path/to/renamed.txt
          example: "path/to/file.txt"

    InvalidFileParamsError:
      allOf:
        - $ref: './openapi.yaml#/components/schemas/InvalidParamsError'
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/InvalidFileParamError'
    
    InvalidFileParamError:
      type: object
      required:
        - param
        - reason
        - message
      properties:
        param:
          type: string
          description: The name of the invalid parameter
        reason:
          type: string
        message:
          type: string
