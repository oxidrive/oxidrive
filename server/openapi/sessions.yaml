openapi: "3.0.0"
info:
  title: Oxidrive Session API
  version: 1.0.0

paths:
  /api/session:
    get:
      operationId: authGetSession
      summary: Return the user information related to the current session
      tags: [auth]
      security:
        - session: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'

  /api/sessions:
    post:
      operationId: authCreateSession
      summary: Create a new session and generate the corresponding cookie
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: oxidrive-session=<session-id>; Path=/; HttpOnly
        '401':
          description: The supplied credentials are invalid
          $ref: './openapi.yaml#/components/responses/Error'
        default:
          $ref: './openapi.yaml#/components/responses/InternalError'

components:
  schemas:
    SessionRequest:
      type: object
      required:
        - credentials
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'

    Session:
      type: object
      required:
        - user
        - expiresAt
      properties:
        user:
          $ref: '#/components/schemas/User'
        expiresAt:
          type: string
          format: date-time

    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string

    Credentials:
      allOf:
        - type: object
          required:
            - kind
          properties:
            kind:
              type: string
              enum: [password]
        - oneOf:
            - $ref: '#/components/schemas/PasswordCredentials'

    PasswordCredentials:
      type: object
      required:
        - kind
        - username
        - password
      properties:
        kind:
          type: string
          enum: [password]
        username:
          type: string
        password:
          type: string

