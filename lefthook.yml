#   Refer for explanation to following link:
#   https://github.com/evilmartians/lefthook/blob/master/docs/configuration.md
#
#
pre-commit:
  parallel: true
  jobs:
    - name: "js"
      group:
        glob: "*.{js,ts,cjs,mjs,d.cts,d.mts,jsx,tsx,json,jsonc}"
        jobs:
          - name: biome-check 
            run: npx --no @biomejs/biome check --no-errors-on-unmatched --files-ignore-unknown=true --write {staged_files}
          - name: biome-format
            run: npx --no @biomejs/biome format --no-errors-on-unmatched --files-ignore-unknown=true --write {staged_files}
          - name: biome-lint
            run: npx --no @biomejs/biome lint --no-errors-on-unmatched --files-ignore-unknown=true --write {staged_files}
          - name: check-types
            run: just web/check

    - name: "rust"
      group:
        piped: true
        jobs:
          - name: rustfmt
            glob: "*.rs"
            run: cargo fmt --all
          - name: clippy
            glob: "*.rs"
            run: cargo clippy --fix --allow-dirty --allow-staged
      
    - name: "cedar"
      group:
        piped: true
        jobs:
          - name: "format"
            glob: "*.cedar"
            run: |
              for file in {staged_files}; do
                cedar format -p "$file" --write
              done
          - name: "validate"
            glob: "*.{cedar,cedarschema}"
            run: |
              schema=$(mktemp XXXXX.cedarschema --tmpdir)
              find . -name "*.cedarschema" -exec sh -c "cat {} >> $schema" \;
              
              for file in $(echo {staged_files}); do
                if [[ "$file" == *.cedar ]]; then
                  cedar validate -s "$schema" -p "$file" --deny-warnings
                fi
              done

    # nixpkgs-fmt:
    #   glob: "*.nix"
    #   run: nixpkgs-fmt

    - name: links
      glob: "*.md"
      exclude: CHANGELOG.md
      run: lychee --max-concurrency 3 {staged_files}

    - name: fix-typos
      exclude: '(^|/)((.*)\.pub|Cargo.lock|flake.lock|package-lock.json$'
      file_types:
        - text
        - not symlink
      run: typos --write-changes {staged_files}

    - name: "openapi"
      group:
        piped: true
        jobs:
        - name: openapi-schema
          glob: '*.rs'
          run: just generate-openapi-schema

        - name: openapi-types
          glob: openapi.json
          run: just generate-openapi-types --check
          fail_text: rerun 'just generate-openapi' and commit the updated files
