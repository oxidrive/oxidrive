name: Build OCI image

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
env:
  CARGO_TERM_COLOR: always
  REGISTRY_AUTH_FILE: 

jobs:
  build-and-push:
    name: Build OCI image and push to registry
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - run: nix flake check

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | nix run nixpkgs#skopeo -- login --username ${{ github.actor }} --password-stdin ghcr.io 

      - name: Build and push image
        id: build
        run: |
          nix develop --command just ci/build-and-push-image ghcr.io/${{ github.repository }} ${{ inputs.tag }}
          digest=$(nix develop --command skopeo inspect --format "{{ .Digest }}" "docker://ghcr.io/${{ github.repository }}:${{ inputs.tag }}")
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

      - name: Sign image
        if: github.ref == 'refs/heads/main'
        run: |
          cp ${XDG_RUNTIME_DIR}/containers/auth.json ~/.docker/config.json
          nix develop --command cosign sign --yes --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
