name: Server CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths:
      - .github/workflows/**
      - .cargo/**
      - app/**
      - bin/**
      - lib/**
      - migrations/**
      - Cargo.*
      - rust-toolchain.toml
  merge_group:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: server-ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write

jobs:
  test:
    if: github.event.pull_request.draft == false
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: 'postgres:16-alpine'
        env:
          POSTGRES_USER: oxidrive
          POSTGRES_PASSWORD: oxidrive
          POSTGRES_DB: oxidrive
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Run tests
        run: nix develop --command just ci/test
        env:
          DATABASE_URL: 'postgres://oxidrive:oxidrive@localhost:5432/oxidrive?sslmode=disable'
      - name: Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: "target/nextest/ci/junit.xml"
      # - name: Run mutations
      #   run: nix develop --command just test-mutations
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: mutants.out
      #     path: mutants.out

  fmt:
    if: github.event.pull_request.draft == false
    name: Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Check formatting
        run: nix develop --command just ci/fmt

  clippy:
    if: github.event.pull_request.draft == false
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Check for issues
        run: nix develop --command just ci/clippy

  api-test:
    if: github.event.pull_request.draft == false
    name: API Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Configure SQLite database
        run: echo "DATABASE_URL=sqlite://$(mktemp -d)/oxidrive.db" >> $GITHUB_ENV
      - name: Start Oxidrive server
        run: nix develop --command cargo run oxidrive -- server &
      - name: Run Bruno tests
        run: nix develop --command just bruno/test
    
