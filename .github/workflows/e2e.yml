name: E2E Tests

on:
  pull_request:
      types: [opened, synchronize, reopened, ready_for_review]
      branches:
        - main
  merge_group:
  workflow_call:

concurrency:
  group: e2e-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Build release tarball
        run: nix develop --command just release
      - uses: actions/upload-artifact@v4
        with:
          name: oxidrive-release
          path: release/oxidrive.tar.gz
          if-no-files-found: error
          retention-days: 1

  e2e-tests:
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        project: ['chromium', 'firefox', 'webkit', 'chromium-mobile', 'webkit-mobile']
        database: ['sqlite', 'postgres']
        storage: ['filesystem']
    services:
      postgres:
        image: ${{ matrix.database == 'postgres' && 'postgres:16-alpine' || '' }}
        env:
          POSTGRES_USER: oxidrive
          POSTGRES_PASSWORD: oxidrive
          POSTGRES_DB: oxidrive
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v27
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: DeterminateSystems/magic-nix-cache-action@v7
    - uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-

    - uses: actions/download-artifact@v4
      with:
        name: oxidrive-release
        path: release
    - run: tar -xvf release/oxidrive.tar.gz -C release

    - name: Configure SQLite database
      if: ${{ matrix.database == 'sqlite' }}
      run: echo "DATABASE_URL=sqlite://$(mktemp -d)/oxidrive.db" >> $GITHUB_ENV
    - name: Configure PostgreSQL database
      if: ${{ matrix.database == 'postgres' }}
      run: echo "DATABASE_URL=postgres://oxidrive:oxidrive@localhost:5432/oxidrive?sslmode=disable" >> $GITHUB_ENV

    - name: Configure FS storage
      if: ${{ matrix.storage == 'filesystem' }}
      run: echo "OXIDRIVE_STORAGE_FS_DATA_DIR=$(mktemp -d)" >> $GITHUB_ENV

    - name: Install Playwright
      run: nix develop --command just e2e/setup
    - name: Run Playwright tests
      run: nix develop --command just e2e/test --project \"${{ matrix.project }}\"
      env:
        OXIDRIVE_BIN: ../release/oxidrive
        OXIDRIVE_ASSETS_FOLDER: ../release/assets
        LOG_FORMAT: text
        LOG_LEVEL: info
        DEBUG: pw:webserver
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.project }}-${{ matrix.database }}-${{ matrix.storage }}
        path: playwright-report
        retention-days: 30
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: test-results-${{ matrix.project }}-${{ matrix.database }}-${{ matrix.storage }}
        path: test-results
        retention-days: 30
